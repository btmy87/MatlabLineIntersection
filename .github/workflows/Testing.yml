# This is a basic workflow to help you get started with Actions

name: Unit_Tests

# Controls when the workflow will run
on: 
  # Triggers the workflow on push or pull request on main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    strategy:
      matrix: 
        #version: [latest, R2023b, R2023a, R2022b, R2022a, R2021b, R2021a]
        #os: [ubuntu-latest, windows-latest, macos-13]
        version: [R2024b, R2023b, R2022b, R2021a]
        os: [ubuntu-latest, windows-latest]
        include:
          - os: macos-14
            version: R2024b
          - os: macos-14
            version: R2023b
      fail-fast: false
      
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: make failing artifact
        shell: bash
        run: |
          echo "{
            \"os\": \"${{matrix.os}}\",
            \"version\": \"${{matrix.version}}\",
            \"status\": \"fail\"
          }" > ${{matrix.os}}-${{matrix.version}}-results.json

      - name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v2
        with: 
          release: ${{ matrix.version }}

      - name: Run tests
        uses: matlab-actions/run-tests@v2

      - name: make passing artifact
        shell: bash
        run: |
          echo "{
            \"os\": \"${{matrix.os}}\",
            \"version\": \"${{matrix.version}}\",
            \"status\": \"pass\"
          }" > ${{matrix.os}}-${{matrix.version}}-results.json
          
      - name: upload artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{matrix.os}}-${{matrix.version}}-results
          path: ${{matrix.os}}-${{matrix.version}}-results.json
          retention-days: 1
          compression-level: 0

  make_badge:
    runs-on: ubuntu-latest
    if: always()
    needs: [test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: ./artifacts

      - name: make badge svg
        shell: bash
        run: python make_badge.py
          
      - name: upload badge
        uses: exuanbo/actions-deploy-gist@v1
        with:
          token: ${{ secrets.BADGE_SECRET }}
          gist_id: 0f25477c0a3820599438e573cee862a3
          file_path: ./artifacts/badge.svg
          file_type: binary

